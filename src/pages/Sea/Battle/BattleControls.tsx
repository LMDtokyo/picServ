import React from 'react';
import './BattleControls.css';

interface Skill {
    id: number;
    type: string;
    name: string;
    iconUrl?: string;
    cooldownLeft: number;
    owned?: boolean;
    disabled?: boolean;  // –ø—Ä–∏—Ö–æ–¥–∏—Ç —Å —Å–µ—Ä–≤–µ—Ä–∞
    reason?: string;     // –ø—Ä–∏—á–∏–Ω–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
}

/** –ü—Ä–æ–ø—ã –¥–ª—è –Ω–∞—à–µ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –∫–Ω–æ–ø–æ–∫ */
interface BattleControlsProps {
    target: any;
    busy: boolean;
    leave: () => void;
    pickTarget: () => void;
    isEveryoneDead: boolean;
    onUseSkill: (skill: Skill) => void;

    // –†–µ—Å—É—Ä—Å—ã (–¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è)
    rumAmount: number;
    gunpowderAmount?: number;

    // –°–ø–∏—Å–æ–∫ —Å–∫–∏–ª–ª–æ–≤
    skills?: Skill[];
}

const API_BASE = import.meta.env.VITE_API_URL || 'http://localhost:5000';

export const BattleControls: React.FC<BattleControlsProps> = ({
                                                                  target,
                                                                  busy,
                                                                  leave,
                                                                  pickTarget,
                                                                  isEveryoneDead,
                                                                  onUseSkill,
                                                                  rumAmount,
                                                                  gunpowderAmount = 0,
                                                                  skills = [],
                                                              }) => {
    return (
        <div className="battle-controls">
            {/* –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –º–∞—Å—Å–∏–≤ skills */}
            {skills.map((skill) => {
                const isHeal = skill.type === 'heal';
                const isAttack = skill.type === 'attack' || skill.type === 'damage';
                const isMortar = skill.type === 'mortar_fire';

                // –ï—Å–ª–∏ skill.owned === false, –∑–Ω–∞—á–∏—Ç –Ω–µ—Ç —ç—Ç–æ–≥–æ —Å–∫–∏–ª–ª–∞
                const owned = skill.owned ?? true;
                // –ï—Å–ª–∏ skill.cooldownLeft > 0, —Ç–æ –Ω–∞ –∫—É–ª–¥–∞—É–Ω–µ
                const isOnCooldown = skill.cooldownLeft > 0;

                // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–∫—É –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
                let isLogicDisabled = false;
                let reason = skill.reason || '';

                if (!owned) {
                    isLogicDisabled = true;
                    reason = '–°–∫–∏–ª–ª –Ω–µ –∏–∑—É—á–µ–Ω';
                }
                if (isHeal && rumAmount <= 0) {
                    isLogicDisabled = true;
                    reason = '–ù–µ—Ç —Ä–æ–º–∞';
                }
                if (isMortar && gunpowderAmount <= 0) {
                    isLogicDisabled = true;
                    reason = '–ù–µ—Ç –ø–æ—Ä–æ—Ö–∞';
                }
                if (isAttack && !target) {
                    isLogicDisabled = true;
                    reason = '–ù–µ—Ç —Ü–µ–ª–∏';
                }

                // –ò—Ç–æ–≥–æ–≤—ã–π —Ñ–ª–∞–≥ disabled
                const isDisabled = busy || skill.disabled || isOnCooldown || isLogicDisabled;

                // –î–ª—è —Å–µ—Ä–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞
                const grayedOut = isDisabled ? 'grayscale opacity-50' : '';

                // –ò–∫–æ–Ω–∫–∞ ‚Äî –µ—Å–ª–∏ skill.iconUrl –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –Ω–∞ "/", –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ–º API_BASE
                const iconSrc = skill.iconUrl?.startsWith('/')
                    ? `${API_BASE}${skill.iconUrl}`
                    : `${API_BASE}/skills/${skill.type}.png`;

                return (
                    <div key={skill.id} className="skill-slot-wrapper">
                        <button
                            className={`skill-slot ${isDisabled ? 'disabled' : ''}`}
                            onClick={() => !isDisabled && onUseSkill(skill)}
                            disabled={isDisabled}
                            title={reason || skill.reason || skill.name}
                        >
                            <img
                                src={iconSrc}
                                alt={skill.name}
                                className={grayedOut}
                                onError={(e) => {
                                    // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –∏–∫–æ–Ω–∫—É, –ø–æ–¥—Å—Ç–∞–≤–∏–º –¥–µ—Ñ–æ–ª—Ç
                                    e.currentTarget.src = '/assets/icons/default.png';
                                }}
                            />
                            {/* –ï—Å–ª–∏ –µ—Å—Ç—å –∫—É–ª–¥–∞—É–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å—Ç–∞–≤—à–µ–µ—Å—è –≤—Ä–µ–º—è */}
                            {skill.cooldownLeft > 0 && (
                                <div className="cooldown">{skill.cooldownLeft}s</div>
                            )}
                        </button>

                        {/* –ï—Å–ª–∏ —ç—Ç–æ heal, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–æ–º–∞ */}
                        {isHeal && (
                            <div className="rum-info">
                                ü•É –†–æ–º–∞: <strong>{rumAmount}</strong>
                            </div>
                        )}
                        {/* –ï—Å–ª–∏ —ç—Ç–æ mortar_fire, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Ä–æ—Ö–∞ */}
                        {isMortar && (
                            <div className="rum-info">
                                –ü–æ—Ä–æ—Ö: <strong>{gunpowderAmount}</strong>
                            </div>
                        )}
                    </div>
                );
            })}

            {/* –ö–Ω–æ–ø–∫–∞ ¬´–í—ã–±—Ä–∞—Ç—å –±–ª–∏–∂–∞–π—à–µ–≥–æ –≤—Ä–∞–≥–∞¬ª */}
            <div className="skill-slot-wrapper">
                <button
                    className="skill-slot"
                    onClick={pickTarget}
                    disabled={isEveryoneDead}
                    title="–ë–ª–∏–∂–∞–π—à–∏–π"
                >
                    <img src="/assets/icons/target.png" alt="–ë–ª–∏–∂–∞–π—à–∏–π" />
                </button>
            </div>

            {/* –ö–Ω–æ–ø–∫–∞ ¬´–í—ã–π—Ç–∏ –∏–∑ –∞—Ä–µ–Ω—ã¬ª */}
            <div className="skill-slot-wrapper">
                <button
                    className="skill-slot"
                    onClick={leave}
                    title="–ü–æ—Ä—Ç"
                >
                    <img src="/assets/icons/leave.png" alt="–ü–æ—Ä—Ç" />
                </button>
            </div>
        </div>
    );
};
